type Query {
  posts: [Post!]!
}

type Mutation {
  register(registerInput: RegisterInput): AuthPayload!
  login(username: String!, password: String!): AuthPayload!
}

# Inputs
input RegisterInput {
  username: String!
  email: String!
  password: String!
}

# Types
type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  posts: [Post!]!
  createdAt: String
  updatedAt: String
}

type Post {
  id: ID!
  body: String!
  author: User!
  comments: [Comment!]!
  likes: [Like!]!
  createdAt: String
  updatedAt: String
}

type Comment {
  id: ID!
  body: String!
  post: Post!
  createdAt: String
  updatedAt: String
}

type Like {
  id: ID!
  type: String!
  post: Post!
  createdAt: String
  updatedAt: String
}

enum LikeType {
  LIKE
  DISLIKE
  SMILE
  ANGRY
}
